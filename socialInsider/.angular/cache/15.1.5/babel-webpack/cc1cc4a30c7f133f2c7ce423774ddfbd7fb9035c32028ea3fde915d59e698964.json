{"ast":null,"code":"import { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BrandService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:4200/backendCompare';\n  }\n  getBrands() {\n    return this.http.get(this.backendUrl).pipe(tap(_ => this.log('fetched heroes')), catchError(this.handleError('getBrands', [])));\n  }\n}\nBrandService.ɵfac = function BrandService_Factory(t) {\n  return new (t || BrandService)(i0.ɵɵinject(i1.HttpClient));\n};\nBrandService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BrandService,\n  factory: BrandService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,EAAOC,GAAG,QAAQ,gBAAgB;;;AAKrD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,eAAU,GAAW,sCAAsC;EAEnB;EAExCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,UAAU,CAAC,CAC7CC,IAAI,CACHP,GAAG,CAACQ,CAAC,IAAI,IAAI,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EACpCV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAU,WAAW,EAAE,EAAE,CAAC,CAAC,CACvD;EACH;;AAZWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["catchError","tap","BrandService","constructor","http","getBrands","get","backendUrl","pipe","_","log","handleError","factory","providedIn"],"sourceRoot":"","sources":["/home/keyglock/SocialInsiderProject/socialInsider/src/app/services/brand/brand.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Brand } from 'src/app/brand';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n  backendUrl: string = 'http://localhost:4200/backendCompare';\n\n  constructor(private http: HttpClient) { }\n\n  getBrands() {\n    return this.http.get<Brand[]>(this.backendUrl)\n    .pipe(\n      tap(_ => this.log('fetched heroes')),\n      catchError(this.handleError<Brand[]>('getBrands', []))\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
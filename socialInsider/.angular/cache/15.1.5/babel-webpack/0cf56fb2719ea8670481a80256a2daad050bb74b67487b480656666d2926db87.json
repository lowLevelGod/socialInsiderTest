{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BrandService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:4200/backendCompare';\n  }\n  getBrands() {\n    return this.http.get(this.backendUrl).pipe(console.log(data), map(data => JSON.parse(data)['result']));\n  }\n}\nBrandService.ɵfac = function BrandService_Factory(t) {\n  return new (t || BrandService)(i0.ɵɵinject(i1.HttpClient));\n};\nBrandService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BrandService,\n  factory: BrandService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAqBA,GAAG,QAAa,gBAAgB;;;AAKrD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,eAAU,GAAW,sCAAsC;EAEnB;EAExCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,UAAU,CAAC,CAC1CC,IAAI,CACHC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC,EACjBV,GAAG,CAACU,IAAI,IACNC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC,QAAQ,CAC1B,CACF,CAAC;EACN;;AAdWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["map","BrandService","constructor","http","getBrands","get","backendUrl","pipe","console","log","data","JSON","parse","factory","providedIn"],"sourceRoot":"","sources":["/home/keyglock/SocialInsiderProject/socialInsider/src/app/services/brand/brand.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Brand } from 'src/app/brand';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n  backendUrl: string = 'http://localhost:4200/backendCompare';\n\n  constructor(private http: HttpClient) { }\n\n  getBrands() {\n    return this.http.get<string>(this.backendUrl)\n      .pipe(\n        console.log(data)\n        map(data => (\n          JSON.parse(data)['result']\n        )\n      ));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
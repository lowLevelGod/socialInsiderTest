{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BrandService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:4200/backendCompare';\n  }\n  getBrands() {\n    var result = this.http.get(this.backendUrl);\n    return result.pipe(map(brands => brands.result));\n  }\n  getProfileData(id, date, profile_type) {\n    const body = {\n      id: id,\n      date: date,\n      profile_type: profile_type\n    };\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.http.post(this.backendUrl, JSON.stringify(body), {\n      headers: headers\n    }).pipe(map(b => {\n      var tmp = JSON.parse(JSON.stringify(b));\n      const key1 = Object.keys(tmp.resp)[0];\n      const keys = Object.keys(tmp.resp[key1]);\n      var totalFans = 0;\n      var totalEngagement = 0;\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        totalEngagement += Number(tmp.resp[key1][key].engagement);\n        console.log(key, tmp.resp[key1][key]);\n      }\n      const res = {\n        totalEngagement: totalEngagement,\n        totalFans: totalFans\n      };\n      return res;\n    }));\n    ;\n  }\n}\nBrandService.ɵfac = function BrandService_Factory(t) {\n  return new (t || BrandService)(i0.ɵɵinject(i1.HttpClient));\n};\nBrandService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BrandService,\n  factory: BrandService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,GAAG,QAAa,gBAAgB;;;AAKrD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,eAAU,GAAW,sCAAsC;EAEnB;EAExCC,SAAS;IACP,IAAIC,MAAM,GAAG,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,IAAI,CAACC,UAAU,CAAC;IAEzD,OAAOF,MAAM,CAACG,IAAI,CAChBR,GAAG,CAACS,MAAM,IAAIA,MAAM,CAACJ,MAAM,CAAC,CAC7B;EACH;EAEAK,cAAc,CAACC,EAAU,EAAEC,IAAgB,EAAEC,YAAoB;IAE/D,MAAMC,IAAI,GAAG;MACXH,EAAE,EAAEA,EAAE;MACNC,IAAI,EAAEA,IAAI;MACVC,YAAY,EAAEA;KACf;IAED,MAAME,OAAO,GACX,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAE3D,IAAI,CAACb,IAAI,CAACc,IAAI,CACZ,IAAI,CAACV,UAAU,EACfW,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,EACpB;MAAEC,OAAO,EAAEA;IAAO,CAAE,CACrB,CAACP,IAAI,CACJR,GAAG,CAACoB,CAAC,IAAG;MACN,IAAIC,GAAG,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,SAAS,CAACC,CAAC,CAAC,CAAC;MACvC,MAAMG,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMD,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACK,IAAI,CAACH,IAAI,CAAC,CAAC;MAExC,IAAII,SAAS,GAAG,CAAC;MACjB,IAAIC,eAAe,GAAG,CAAC;MAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAE,EAAED,CAAC,EAAE;QACpC,MAAME,GAAG,GAAGN,IAAI,CAACI,CAAC,CAAC;QACnBD,eAAe,IAAII,MAAM,CAACX,GAAG,CAACK,IAAI,CAACH,IAAI,CAAC,CAACQ,GAAG,CAAC,CAACE,UAAU,CAAC;QACzDC,OAAO,CAACC,GAAG,CAACJ,GAAG,EAAEV,GAAG,CAACK,IAAI,CAACH,IAAI,CAAC,CAACQ,GAAG,CAAC,CAAC;;MAGvC,MAAMK,GAAG,GAAG;QACVR,eAAe,EAAEA,eAAe;QAChCD,SAAS,EAAEA;OACZ;MAED,OAAOS,GAAG;IACZ,CAAC,CAAC;IACD;EACL;;AApDWnC,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAoC,SAAZpC,YAAY;EAAAqC,YAFX;AAAM","names":["HttpHeaders","map","BrandService","constructor","http","getBrands","result","get","backendUrl","pipe","brands","getProfileData","id","date","profile_type","body","headers","set","post","JSON","stringify","b","tmp","parse","key1","Object","keys","resp","totalFans","totalEngagement","i","length","key","Number","engagement","console","log","res","factory","providedIn"],"sourceRoot":"","sources":["/home/keyglock/SocialInsiderProject/socialInsider/src/app/services/brand/brand.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Brand, BrandsResult, DateSocial } from 'src/app/brand';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n  backendUrl: string = 'http://localhost:4200/backendCompare';\n\n  constructor(private http: HttpClient) { }\n\n  getBrands() {\n    var result = this.http.get<BrandsResult>(this.backendUrl);\n\n    return result.pipe(\n      map(brands => brands.result)\n    );\n  }\n\n  getProfileData(id: string, date: DateSocial, profile_type: string) {\n\n    const body = {\n      id: id,\n      date: date,\n      profile_type: profile_type\n    }\n\n    const headers =\n      new HttpHeaders().set('Content-Type', 'application/json');\n\n    this.http.post(\n      this.backendUrl,\n      JSON.stringify(body),\n      { headers: headers }\n    ).pipe(\n      map(b => {\n        var tmp = JSON.parse(JSON.stringify(b));\n        const key1 = Object.keys(tmp.resp)[0];\n        const keys = Object.keys(tmp.resp[key1]);\n\n        var totalFans = 0;\n        var totalEngagement = 0;\n\n        for (let i = 0; i < keys.length; ++i) {\n          const key = keys[i];\n          totalEngagement += Number(tmp.resp[key1][key].engagement);\n          console.log(key, tmp.resp[key1][key]);\n        }\n\n        const res = {\n          totalEngagement: totalEngagement,\n          totalFans: totalFans\n        };\n\n        return res;\n      });\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}